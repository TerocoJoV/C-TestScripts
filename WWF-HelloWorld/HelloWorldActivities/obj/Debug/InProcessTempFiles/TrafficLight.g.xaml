<?xml version="1.0" encoding="utf-8"?>
<h:TrafficLight xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:h="clr-namespace:HelloWorldActivities;assembly=HelloWorldActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>HelloWorldActivities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <h:TrafficLight.Implementation>
    <StateMachine InitialState="{x:Reference __ReferenceID0}">
      <State x:Name="__ReferenceID0" DisplayName="RedLight">
        <State.Entry>
          <Sequence>
            <Assign>
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">CurrentTime</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <WriteLine Text="Red Light!" />
          </Sequence>
        </State.Entry>
        <State.Exit>
          <WriteLine Text="Exiting red light" />
        </State.Exit>
        <State.Transitions>
          <Transition DisplayName="Switch to Green">
            <Transition.Trigger>
              <Sequence>
                <Delay Duration="00:00:01" />
                <Assign>
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">
                      <mca:CSharpReference x:TypeArguments="x:Int32">CurrentTime</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">
                      <mca:CSharpValue x:TypeArguments="x:Int32">CurrentTime+1</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </Transition.Trigger>
            <Transition.Condition>
              <mca:CSharpValue x:TypeArguments="x:Boolean">CurrentTime &gt; 10</mca:CSharpValue>
            </Transition.Condition>
            <Transition.To>
              <State x:Name="__ReferenceID1" DisplayName="GreenLight">
                <State.Entry>
                  <Sequence>
                    <Assign>
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <mca:CSharpReference x:TypeArguments="x:Int32">CurrentTime</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                      </Assign.Value>
                    </Assign>
                    <WriteLine Text="Green Light!" />
                  </Sequence>
                </State.Entry>
                <State.Exit>
                  <WriteLine Text="Exiting Green Light!" />
                </State.Exit>
                <State.Transitions>
                  <Transition DisplayName="Switch to Yellow">
                    <Transition.Trigger>
                      <Sequence>
                        <Delay Duration="00:00:01" />
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">
                              <mca:CSharpReference x:TypeArguments="x:Int32">CurrentTime</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">
                              <mca:CSharpValue x:TypeArguments="x:Int32">CurrentTime+1</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </Transition.Trigger>
                    <Transition.Condition>
                      <mca:CSharpValue x:TypeArguments="x:Boolean">CurrentTime &gt;10</mca:CSharpValue>
                    </Transition.Condition>
                    <Transition.To>
                      <State x:Name="__ReferenceID2" DisplayName="YellowLight">
                        <State.Entry>
                          <Sequence>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpReference x:TypeArguments="x:Int32">CurrentTime</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </Assign.Value>
                            </Assign>
                            <WriteLine Text="Yellow Light!" />
                          </Sequence>
                        </State.Entry>
                        <State.Exit>
                          <WriteLine Text="Exiting Yellow Light!" />
                        </State.Exit>
                        <State.Transitions>
                          <Transition DisplayName="Switch to Red">
                            <Transition.Trigger>
                              <Sequence>
                                <Delay Duration="00:00:01" />
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">
                                      <mca:CSharpReference x:TypeArguments="x:Int32">CurrentTime</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">
                                      <mca:CSharpValue x:TypeArguments="x:Int32">CurrentTime+1</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </Transition.Trigger>
                            <Transition.To>
                              <x:Reference>__ReferenceID0</x:Reference>
                            </Transition.To>
                            <Transition.Condition>
                              <mca:CSharpValue x:TypeArguments="x:Boolean">CurrentTime &gt; 10</mca:CSharpValue>
                            </Transition.Condition>
                          </Transition>
                        </State.Transitions>
                      </State>
                    </Transition.To>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
          </Transition>
        </State.Transitions>
      </State>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="x:Int32" Name="CurrentTime" />
      </StateMachine.Variables>
      <sads:DebugSymbol.Symbol>d0xDOlxfX0dJVFxDLVRlc3RTY3JpcHRzXFdXRi1IZWxsb1dvcmxkXEhlbGxvV29ybGRBY3Rpdml0aWVzXFRyYWZmaWNMaWdodC54YW1sMSYDywESAgEBJwXDAQ0CASxVDb0BFQIBF4MBFbcBHQIBAikJNxQCATo6CTpdAgE4Pw1PGAIBMFINUl8CAS5XEWUcAgElaBFoaAIBI20VfSACARuAARWAAWYCARmFARmTASQCARCWARmWAXECAQ6bAR2rASgCAQaxAR2xAW8CAQQqCzQUAgE9NQs1WAIBOzoZOiwCATlAD0BWAgE2QQ9NGAIBMVgTYhwCAShjE2NiAgEmaCFoNwIBJG4Xbl4CASFvF3sgAgEchgEbkAEkAgETkQEbkQFrAgERlgEplgFAAgEPnAEfnAFmAgEMnQEfqQEoAgEHMTUxNgIBQC0RLWECAT41GzUnAgE8QB9AKQIBN0kVSV8CATREFURlAgEyXz1fPgIBK1sZW2kCASljI2MxAgEnbiduMQIBIncdd2cCAR9yHXJtAgEdjQFFjQFGAgEWiQEhiQFxAgEUkQErkQE6AgESnAEvnAE5AgENpQElpQFvAgEKoAEloAF1AgEI</sads:DebugSymbol.Symbol>
    </StateMachine>
  </h:TrafficLight.Implementation>
</h:TrafficLight>